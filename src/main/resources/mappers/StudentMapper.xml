<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="socialP.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="socialP.pojo.dao.Student" >
    <constructor >
      <idArg column="student_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="student_name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="password" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="college" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="university" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="email" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="telephone" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="image_u_r_l" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="identity" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List" >
    student_id, student_name, password, college, university, email, telephone, image_u_r_l, 
    identity
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where student_id = #{studentId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="socialP.pojo.dao.Student" >
    insert into student (student_id, student_name, password, 
      college, university, email, 
      telephone, image_u_r_l, identity
      )
    values (#{studentId,jdbcType=INTEGER}, #{studentName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{college,jdbcType=VARCHAR}, #{university,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{telephone,jdbcType=VARCHAR}, #{imageURL,jdbcType=VARCHAR}, #{identity,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="socialP.pojo.dao.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        student_id,
      </if>
      <if test="studentName != null" >
        student_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="college != null" >
        college,
      </if>
      <if test="university != null" >
        university,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="imageURL != null" >
        image_u_r_l,
      </if>
      <if test="identity != null" >
        identity,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="studentId != null" >
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="studentName != null" >
        #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        #{college,jdbcType=VARCHAR},
      </if>
      <if test="university != null" >
        #{university,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="imageURL != null" >
        #{imageURL,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        #{identity,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="socialP.pojo.dao.Student" >
    update student
    <set >
      <if test="studentName != null" >
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="college != null" >
        college = #{college,jdbcType=VARCHAR},
      </if>
      <if test="university != null" >
        university = #{university,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="imageURL != null" >
        image_u_r_l = #{imageURL,jdbcType=VARCHAR},
      </if>
      <if test="identity != null" >
        identity = #{identity,jdbcType=INTEGER},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="socialP.pojo.dao.Student" >
    update student
    set student_name = #{studentName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      college = #{college,jdbcType=VARCHAR},
      university = #{university,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      image_u_r_l = #{imageURL,jdbcType=VARCHAR},
      identity = #{identity,jdbcType=INTEGER}
    where student_id = #{studentId,jdbcType=INTEGER}
  </update>
</mapper>